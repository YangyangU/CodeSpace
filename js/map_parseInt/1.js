//map 遍历  callback 返回值 新的数组
// 1 
// map 接收三个值 （目标元素，下标，原数组）

// parseInt 接收两个值，第二个可选（要被解析的值，进制的基数，传几就算几进制）
// parseInt('3',2)   //二进制没有3  所以返回NaN
parseInt(1,0,[1,2,3])
console.log([1,2,3].map(parseInt));

console.log(parseInt(2,1,[1,2,3]));

console.log([1,2,3].map(parseInt));


// map 函数会遍历数组 [1, 2, 3] 中的每个元素，并对每个元素应用提供的函数。

// 在这里，提供的函数是 parseInt。然而，parseInt 函数接受两个参数：要解析的字符串和一个表示解析时的基数（radix）。

// 对于 map，它将传递三个参数给提供的函数，这三个参数分别是：当前元素的值、当前元素的索引、数组本身。

// 具体来说，对于第一个元素 1，map 会调用 parseInt("1", 0)，因为基数是 0。在 parseInt 中，基数为 0 时，会根据字符串的格式判断基数，如果以 "0x" 或 "0X" 开头，会被解析为十六进制，如果以 "0" 开头，会被解析为八进制，否则会被解析为十进制。因此，parseInt("1", 0) 将 "1" 解析为十进制，结果是 1。

// 对于第二个元素 2，map 会调用 parseInt("2", 1)，在这里基数是 1。基数为 1 时，表示解析为基数为 1 的数字。由于 2 超过了基数 1，parseInt 返回 NaN。

// 对于第三个元素 3，map 会调用 parseInt("3", 2)，在这里基数是 2。基数为 2 时，表示解析为基数为 2 的数字。由于 3 超过了基数 2，parseInt 返回 NaN。